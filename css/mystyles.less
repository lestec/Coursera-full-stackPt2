/*	added a few color and a height variable. We will make use of        	these variables while defining the classes.	*/

@white: #ffffff;
@off-white: #eeeeee;
@lt-gray: #dddddd;
@indigo: #303f9f;
@dark-indigo: #1a237e;
@light-indigo: #7986CB;

// Height variables
@carousel-height: 300px;

// adding mixing into file
.zero-margin (@pad-up-dn: 0px, @pad-left-right: 0px) {
	margin:0px auto;
	padding: @pad-up-dn @pad-left-right;
}
/* will make use of above(zero-margin) to define several
	row classes next */

/* Next using Mixin class we defined earlier, adding following
	row classes to file */ 

.row-header {
	.zero-margin();
}
.row-content {
	.zero-margin (50px, 0px);
	border-bottom: 1px ridge;
	min-height:400px;
}
.row-footer {
	.zero-margin(20px, 0px);
	background-color: #AfAfAf;
}
.jumbotron {
	.zero-margin(70px, 30px);
	background:@light-indigo;
	color:floralwhite;
}
/* Note use of mixin with various parameters in def the class above****
	Next add a carousel class to illustrate the use of nesting of classes in less as follows	*/

/* note the use of the variables that we have defined already------
--also use of nesting with the item class inside the carousel class
and img class inside. so when combind we have 3 diff classes */

.carousel {
	background:@dark-indigo;
	.item {
		height: @carousel-height;
		img {
			left: 0;
			min-height: @carousel-height;
			position: absolute;
			top: 0;
		}
	}
}

/*	Add another group of nesting classes with the navbar-inverse class as follows */

.navbar-inverse {
	background: @indigo;
	color:@white;
	.navbar-nav>.active>a {
		background: @dark-indigo;
		color: @white;
		&:hover {
			background: @dark-indigo;
			color: @white;
		}
		&:focus {
			background: @dark-indigo;
			color: @white;
		}
	}
	.navbar-nav>.open>a {
		background: @dark-indigo;
		color: @white;
		&:hover {
			background: @dark-indigo;
			color: @white;
		}
		&:focus {
			background: @dark-indigo;
			color: @white;
		}
	}
	.navbar-nav {
		.open {
			.dropdown-menu>li>a {
				background-color: @indigo;
				color:@off-white;
				&:hover {
					color:#000000;
				}
			}
			.dropdown-menu {
				background-color: @indigo;
				color:@off-white;
			}
		}
	}
}

/* adding remaining css classes which do not fall into any of the 
above categories. These still use the Less variables (like color)
, but do not use nesting or mixins. and could not use the Less features into a lg extent---most standard css classes and
have nothing in common with the remaining classes  */

address {
	color:#0f0f0f;
	font-size:80%;
	margin:0px;
}
body {
	align:center;
	padding:50px 0px 0px 0px;
	z-index:0;
}
.tab-content {
	border-bottom: 1px solid @lt-gray;
	border-left: 1px solid @lt-gray;
	border-right: 1px solid @lt-gray;
	padding: 10px;
}
.affix {
	top:100px;
}
#carouselButtons {
	bottom: 0px;
	position: absolute;
	right:0px;
}

/* after this code going to install and use the lessc Compiler
Once we installed node module to support the compilation of
Less file. To do this type th following at the command prompt
npm install -g less
This will install the less NPM module globally so it can be used by any project. This will make aval lessc compiler so that can compile Less files */		
